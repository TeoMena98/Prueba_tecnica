{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nexport class AuthComponent {\n  constructor(authService, fb, router) {\n    this.authService = authService;\n    this.fb = fb;\n    this.router = router;\n  }\n  ngOnInit() {\n    if (this.authService.isLogged()) {\n      this.router.navigate(['/']);\n    }\n    this.loginForm = this.fb.group({\n      email: new FormControl('', [Validators.required])\n    });\n  }\n  onSumbit() {\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value.email);\n    }\n  }\n  static #_ = this.ɵfac = function AuthComponent_Factory(t) {\n    return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthComponent,\n    selectors: [[\"app-auth\"]],\n    decls: 9,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"init-login\"], [3, \"formGroup\", \"submit\"], [1, \"init-login__control\"], [\"formControlName\", \"email\", \"matInput\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"init-login__control\"]],\n    template: function AuthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"submit\", function AuthComponent_Template_form_submit_2_listener() {\n          return ctx.onSumbit();\n        });\n        i0.ɵɵelementStart(3, \"mat-form-field\", 3)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 5);\n        i0.ɵɵtext(8, \" Iniciar Sesion \");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.MatButton],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n}\\n\\n.init-login[_ngcontent-%COMP%] {\\n  width: 300px;\\n}\\n\\n.init-login__control[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-top: 16px;\\n}\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29yZS9hdXRoL2F1dGguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7QUFDbEI7O0FBRUEsMENBQTBDIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbn1cclxuXHJcbi5pbml0LWxvZ2luIHtcclxuICB3aWR0aDogMzAwcHg7XHJcbn1cclxuXHJcbi5pbml0LWxvZ2luX19jb250cm9sIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW4tdG9wOiAxNnB4O1xyXG59XHJcblxyXG4vKiBBZGQgYW55IGFkZGl0aW9uYWwgc3R5bGluZyB5b3UgcHJlZmVyICovXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","AuthComponent","constructor","authService","fb","router","ngOnInit","isLogged","navigate","loginForm","group","email","required","onSumbit","valid","login","value","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","FormBuilder","i3","Router","_2","selectors","decls","vars","consts","template","AuthComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AuthComponent_Template_form_submit_2_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Teo\\Desktop\\prueba-airisled\\frontend\\src\\app\\core\\auth\\auth.component.ts","C:\\Users\\Teo\\Desktop\\prueba-airisled\\frontend\\src\\app\\core\\auth\\auth.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css'],\r\n})\r\nexport class AuthComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.authService.isLogged()) {\r\n      this.router.navigate(['/']);\r\n    }\r\n\r\n    this.loginForm = this.fb.group({\r\n      email: new FormControl('', [Validators.required]),\r\n    });\r\n  }\r\n\r\n  onSumbit() {\r\n    if (this.loginForm.valid) {\r\n      this.authService.login(this.loginForm.value.email);\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"init-login\">\r\n    <form (submit)=\"onSumbit()\" [formGroup]=\"loginForm\">\r\n      <mat-form-field class=\"init-login__control\">\r\n        <mat-label>Email</mat-label>\r\n        <input formControlName=\"email\" matInput />\r\n      </mat-form-field>\r\n\r\n      <button\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        class=\"init-login__control\"\r\n      >\r\n        Iniciar Sesion\r\n      </button>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"mappings":"AAEA,SAEEA,WAAW,EAEXC,UAAU,QACL,gBAAgB;;;;;;;;AAQvB,OAAM,MAAOC,aAAa;EAGxBC,YACUC,WAAwB,EACxBC,EAAe,EACfC,MAAc;IAFd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,MAAM,GAANA,MAAM;EACb;EAEHC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACH,WAAW,CAACI,QAAQ,EAAE,EAAE;MAC/B,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;IAG7B,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC7BC,KAAK,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACY,QAAQ,CAAC;KACjD,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACJ,SAAS,CAACK,KAAK,EAAE;MACxB,IAAI,CAACX,WAAW,CAACY,KAAK,CAAC,IAAI,CAACN,SAAS,CAACO,KAAK,CAACL,KAAK,CAAC;;EAEtD;EAAC,QAAAM,CAAA,G;qBAvBUhB,aAAa,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbzB,aAAa;IAAA0B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCf1Bf,EAAA,CAAAiB,cAAA,aAAuB;QAEbjB,EAAA,CAAAkB,UAAA,oBAAAC,8CAAA;UAAA,OAAUH,GAAA,CAAArB,QAAA,EAAU;QAAA,EAAC;QACzBK,EAAA,CAAAiB,cAAA,wBAA4C;QAC/BjB,EAAA,CAAAoB,MAAA,YAAK;QAAApB,EAAA,CAAAqB,YAAA,EAAY;QAC5BrB,EAAA,CAAAsB,SAAA,eAA0C;QAC5CtB,EAAA,CAAAqB,YAAA,EAAiB;QAEjBrB,EAAA,CAAAiB,cAAA,gBAKC;QACCjB,EAAA,CAAAoB,MAAA,uBACF;QAAApB,EAAA,CAAAqB,YAAA,EAAS;;;QAbiBrB,EAAA,CAAAuB,SAAA,GAAuB;QAAvBvB,EAAA,CAAAwB,UAAA,cAAAR,GAAA,CAAAzB,SAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}