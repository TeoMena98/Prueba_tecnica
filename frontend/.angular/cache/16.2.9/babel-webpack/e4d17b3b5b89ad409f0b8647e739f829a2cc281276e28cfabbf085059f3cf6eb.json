{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n  isLogged() {\n    const token = localStorage.getItem('token');\n    return token !== null;\n  }\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/auth']);\n  }\n  login(mail) {\n    this.http.post(environment.API_URL + '/auth/login', {\n      mail\n    }).subscribe(resp => {\n      localStorage.setItem('token', resp.data.token);\n      this.router.navigate(['/']);\n    }, err => {\n      alert('Something went wrong login.');\n    });\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","AuthService","constructor","http","router","isLogged","token","localStorage","getItem","logout","removeItem","navigate","login","mail","post","API_URL","subscribe","resp","setItem","data","err","alert","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Teo\\Desktop\\prueba-airisled\\frontend\\src\\app\\core\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  ApiResponse,\r\n  AuthResponse,\r\n} from '../interfaces/apì-response.interface';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  isLogged(): boolean {\r\n    const token = localStorage.getItem('token');\r\n    return token !== null;\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    this.router.navigate(['/auth']);\r\n  }\r\n\r\n  login(mail: string) {\r\n    this.http\r\n      .post<ApiResponse<AuthResponse>>(environment.API_URL + '/auth/login', {\r\n        mail,\r\n      })\r\n      .subscribe(\r\n        (resp) => {\r\n          localStorage.setItem('token', resp.data.token);\r\n          this.router.navigate(['/']);\r\n        },\r\n        (err) => {\r\n          alert('Something went wrong login.');\r\n        }\r\n      );\r\n  }\r\n}\r\n"],"mappings":"AAOA,SAASA,WAAW,QAAQ,8BAA8B;;;;AAK1D,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE/DC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAOF,KAAK,KAAK,IAAI;EACvB;EAEAG,MAAMA,CAAA;IACJF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEAC,KAAKA,CAACC,IAAY;IAChB,IAAI,CAACV,IAAI,CACNW,IAAI,CAA4Bd,WAAW,CAACe,OAAO,GAAG,aAAa,EAAE;MACpEF;KACD,CAAC,CACDG,SAAS,CACPC,IAAI,IAAI;MACPV,YAAY,CAACW,OAAO,CAAC,OAAO,EAAED,IAAI,CAACE,IAAI,CAACb,KAAK,CAAC;MAC9C,IAAI,CAACF,MAAM,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,EACAS,GAAG,IAAI;MACNC,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,CACF;EACL;EAAC,QAAAC,CAAA,G;qBA3BUrB,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX5B,WAAW;IAAA6B,OAAA,EAAX7B,WAAW,CAAA8B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}