{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nexport class AuthGuard {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  canActivate() {\n    const logged = this.authService.isLogged();\n    if (logged) {\n      return true;\n    }\n    return this.router.createUrlTree(['/auth']);\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","router","authService","canActivate","logged","isLogged","createUrlTree","_","i0","ɵɵinject","i1","Router","i2","AuthService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Teo\\Desktop\\prueba-airisled\\frontend\\src\\app\\core\\auth\\AuthGuard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, UrlTree } from '@angular/router';\r\n\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthService) {}\r\n\r\n  canActivate(): boolean | UrlTree {\r\n    const logged = this.authService.isLogged();\r\n\r\n    if (logged) {\r\n      return true;\r\n    }\r\n    return this.router.createUrlTree(['/auth']);\r\n  }\r\n}\r\n"],"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,MAAc,EAAUC,WAAwB;IAAhD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;EAAgB;EAEvEC,WAAWA,CAAA;IACT,MAAMC,MAAM,GAAG,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE;IAE1C,IAAID,MAAM,EAAE;MACV,OAAO,IAAI;;IAEb,OAAO,IAAI,CAACH,MAAM,CAACK,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC;EAC7C;EAAC,QAAAC,CAAA,G;qBAVUR,SAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATf,SAAS;IAAAgB,OAAA,EAAThB,SAAS,CAAAiB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}